import{r as o,o as i,c as l,a,b as n,w as p,F as u,d as s,e}from"./app.9744d157.js";import{_ as r}from"./plugin-vue_export-helper.21dcd24c.js";const k={},d=n("h1",{id:"messagecommandbuilder",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#messagecommandbuilder","aria-hidden":"true"},"#"),s(" MessageCommandBuilder")],-1),m=n("p",null,"The entry point to constructing a message command.",-1),h=n("h2",{id:"constructor",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#constructor","aria-hidden":"true"},"#"),s(" Constructor")],-1),g=n("h4",{id:"parameters",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#parameters","aria-hidden":"true"},"#"),s(" Parameters:")],-1),y=n("strong",null,"data?",-1),f=s(": "),w=s("MessageCommandBuilderData"),b=e(`<details class="custom-container details"><summary>TypeScript Source Code</summary><div class="language-typescript ext-ts"><pre class="language-typescript"><code><span class="token keyword">public</span> <span class="token function">constructor</span><span class="token punctuation">(</span>data<span class="token operator">?</span><span class="token operator">:</span> MessageCommandBuilderData<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> data<span class="token operator">?.</span>name <span class="token operator">??</span> <span class="token string">&quot;No name implemented&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>description <span class="token operator">=</span> data<span class="token operator">?.</span>description <span class="token operator">??</span> <span class="token string">&quot;No description implemented&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>aliases <span class="token operator">=</span> data<span class="token operator">?.</span>aliases <span class="token operator">??</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>options <span class="token operator">=</span> data<span class="token operator">?.</span>options <span class="token operator">??</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>roleIds <span class="token operator">=</span> data<span class="token operator">?.</span>roleIds <span class="token operator">??</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>permissions <span class="token operator">=</span> data<span class="token operator">?.</span>permissions <span class="token operator">??</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div></details><hr><h2 id="properties" tabindex="-1"><a class="header-anchor" href="#properties" aria-hidden="true">#</a> Properties</h2><h3 id="name" tabindex="-1"><a class="header-anchor" href="#name" aria-hidden="true">#</a> name</h3><ul><li><strong>type</strong>: <code>string</code></li></ul><p>The name of the command.</p><hr><h3 id="description" tabindex="-1"><a class="header-anchor" href="#description" aria-hidden="true">#</a> description</h3><ul><li><strong>type</strong>: <code>string</code></li></ul><p>The description of the command.</p><hr><h3 id="aliases" tabindex="-1"><a class="header-anchor" href="#aliases" aria-hidden="true">#</a> aliases</h3><ul><li><strong>type</strong>: <code>string[]</code></li></ul><p>Any aliases the command may be executed with.</p><hr><h3 id="options" tabindex="-1"><a class="header-anchor" href="#options" aria-hidden="true">#</a> options</h3>`,16),C=n("strong",null,"type",-1),x=s(": "),_=s("MessageCommandOption"),M=n("code",null,"[]",-1),v=e('<p>The available options/arguments that can be supplied to this command.</p><h2 id="methods" tabindex="-1"><a class="header-anchor" href="#methods" aria-hidden="true">#</a> Methods</h2><h3 id="setname" tabindex="-1"><a class="header-anchor" href="#setname" aria-hidden="true">#</a> <strong>setName</strong></h3><p>Sets the name of the command. Must be called at least once if method-chaining.</p><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a> Parameters:</h4><ul><li><strong>name</strong>: <code>string</code></li></ul><p>The command name. Cannot be empty.</p><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns" aria-hidden="true">#</a> Returns:</h4>',8),O=s("MessageCommandBuilder"),B=e(`<details class="custom-container details"><summary>TypeScript Source Code</summary><div class="language-typescript ext-ts"><pre class="language-typescript"><code><span class="token keyword">public</span> <span class="token function">setName</span><span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> MessageCommandBuilder <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>name <span class="token operator">===</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;Command name must be at least one character long.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div></details><hr><h3 id="setdescription" tabindex="-1"><a class="header-anchor" href="#setdescription" aria-hidden="true">#</a> <strong>setDescription</strong></h3><p>Sets the description of the command. Must be called at least once if method-chaining.</p><h4 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2" aria-hidden="true">#</a> Parameters:</h4><ul><li><strong>description</strong>: <code>string</code></li></ul><p>The command description. Cannot be empty.</p><h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1" aria-hidden="true">#</a> Returns:</h4>`,8),q=s("MessageCommandBuilder"),S=e(`<details class="custom-container details"><summary>TypeScript Source Code</summary><div class="language-typescript ext-ts"><pre class="language-typescript"><code><span class="token keyword">public</span> <span class="token function">setDescription</span><span class="token punctuation">(</span>description<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> MessageCommandBuilder <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>description <span class="token operator">===</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;Command description must be at least one character long.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">this</span><span class="token punctuation">.</span>description <span class="token operator">=</span> description<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div></details><hr><h3 id="setaliases" tabindex="-1"><a class="header-anchor" href="#setaliases" aria-hidden="true">#</a> <strong>setAliases</strong></h3><p>Sets any aliases that this command should be identified by.</p><h4 id="parameters-3" tabindex="-1"><a class="header-anchor" href="#parameters-3" aria-hidden="true">#</a> Parameters:</h4><ul><li><strong>aliases</strong>: <code>string[]</code></li></ul><h4 id="returns-2" tabindex="-1"><a class="header-anchor" href="#returns-2" aria-hidden="true">#</a> Returns:</h4>`,7),T=s("MessageCommandBuilder"),R=e(`<details class="custom-container details"><summary>TypeScript Source Code</summary><div class="language-typescript ext-ts"><pre class="language-typescript"><code><span class="token keyword">public</span> <span class="token function">setAliases</span><span class="token punctuation">(</span>aliases<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> MessageCommandBuilder <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>aliases<span class="token punctuation">.</span>length <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;There must be at least one alias provided in the array.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>aliases<span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> a <span class="token operator">===</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;Aliases must be at least one character long.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">this</span><span class="token punctuation">.</span>aliases <span class="token operator">=</span> aliases<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div></details><hr><h3 id="setroles" tabindex="-1"><a class="header-anchor" href="#setroles" aria-hidden="true">#</a> <strong>setRoles</strong></h3><p>Sets the permitted guild roles that can use this command. If a role isn&#39;t found in the guild, it will be ignored.</p><h4 id="parameters-4" tabindex="-1"><a class="header-anchor" href="#parameters-4" aria-hidden="true">#</a> Parameters:</h4><ul><li><strong>ids</strong>: <code>Snowflake[]</code></li></ul><h4 id="returns-3" tabindex="-1"><a class="header-anchor" href="#returns-3" aria-hidden="true">#</a> Returns:</h4>`,7),E=s("MessageCommandBuilder"),N=e(`<details class="custom-container details"><summary>TypeScript Source Code</summary><div class="language-typescript ext-ts"><pre class="language-typescript"><code><span class="token keyword">public</span> <span class="token function">setRoles</span><span class="token punctuation">(</span>ids<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> MessageCommandBuilder <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>ids<span class="token punctuation">.</span>length <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;There must be at least one role ID provided in the array.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">this</span><span class="token punctuation">.</span>roleIds <span class="token operator">=</span> ids<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div></details><hr><h3 id="setpermissions" tabindex="-1"><a class="header-anchor" href="#setpermissions" aria-hidden="true">#</a> <strong>setPermissions</strong></h3><p>Sets the Discord permission roles that are allowed to use this command.</p><h4 id="parameters-5" tabindex="-1"><a class="header-anchor" href="#parameters-5" aria-hidden="true">#</a> Parameters:</h4><ul><li><strong>permissions</strong>: <code>PermissionResolvable[]</code></li></ul><h4 id="returns-4" tabindex="-1"><a class="header-anchor" href="#returns-4" aria-hidden="true">#</a> Returns:</h4>`,7),P=s("MessageCommandBuilder"),A=e(`<details class="custom-container details"><summary>TypeScript Source Code</summary><div class="language-typescript ext-ts"><pre class="language-typescript"><code><span class="token keyword">public</span> <span class="token function">setPermissions</span><span class="token punctuation">(</span>permissions<span class="token operator">:</span> PermissionResolvable<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> MessageCommandBuilder <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>permissions<span class="token punctuation">.</span>length <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;There must be at least one permission provided in the array.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">this</span><span class="token punctuation">.</span>permissions <span class="token operator">=</span> permissions<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div></details><hr><h3 id="addstringoption" tabindex="-1"><a class="header-anchor" href="#addstringoption" aria-hidden="true">#</a> <strong>addStringOption</strong></h3><p>Adds an option that accepts a line of text, enclosed by <code>&quot;&quot;</code>. This option can have pre-defined values.</p><p>Example: <code>&quot;Hello, world!&quot;</code> or <code>&quot;42&quot;</code></p><h4 id="parameters-6" tabindex="-1"><a class="header-anchor" href="#parameters-6" aria-hidden="true">#</a> Parameters:</h4><ul><li><strong>composer</strong>: <code>(option: MessageCommandStringOption) =&gt; MessageCommandStringOption</code></li></ul><h4 id="returns-5" tabindex="-1"><a class="header-anchor" href="#returns-5" aria-hidden="true">#</a> Returns:</h4>`,8),$=s("MessageCommandBuilder"),D=e(`<details class="custom-container details"><summary>TypeScript Source Code</summary><div class="language-typescript ext-ts"><pre class="language-typescript"><code><span class="token keyword">public</span> <span class="token function">addStringOption</span><span class="token punctuation">(</span><span class="token function-variable function">composer</span><span class="token operator">:</span> <span class="token punctuation">(</span>option<span class="token operator">:</span> MessageCommandStringOption<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> MessageCommandStringOption<span class="token punctuation">)</span><span class="token operator">:</span> MessageCommandBuilder <span class="token punctuation">{</span>
    <span class="token keyword">const</span> option <span class="token operator">=</span> <span class="token function">composer</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MessageCommandStringOption</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>option<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div></details><hr><h3 id="addnumberoption" tabindex="-1"><a class="header-anchor" href="#addnumberoption" aria-hidden="true">#</a> <strong>addNumberOption</strong></h3><p>Add an option that accepts integer values. This option can have pre-defined values.</p><div class="custom-container tip"><p class="custom-container-title">ACCEPTED:</p><p><code>4</code>, <code>1242452352</code>, <code>-1</code></p></div><div class="custom-container danger"><p class="custom-container-title">NOT ACCEPTED:</p><p><code>&quot;4&quot;</code>, <code>true</code></p></div><h4 id="parameters-7" tabindex="-1"><a class="header-anchor" href="#parameters-7" aria-hidden="true">#</a> Parameters:</h4><ul><li><strong>composer</strong>: <code>(option: MessageCommandNumberOption) =&gt; MessageCommandNumberOption</code></li></ul><h4 id="returns-6" tabindex="-1"><a class="header-anchor" href="#returns-6" aria-hidden="true">#</a> Returns:</h4>`,9),I=s("MessageCommandBuilder"),L=e(`<details class="custom-container details"><summary>TypeScript Source Code</summary><div class="language-typescript ext-ts"><pre class="language-typescript"><code><span class="token keyword">public</span> <span class="token function">addNumberOption</span><span class="token punctuation">(</span><span class="token function-variable function">composer</span><span class="token operator">:</span> <span class="token punctuation">(</span>option<span class="token operator">:</span> MessageCommandNumberOption<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> MessageCommandNumberOption<span class="token punctuation">)</span><span class="token operator">:</span> MessageCommandBuilder <span class="token punctuation">{</span>
    <span class="token keyword">const</span> option <span class="token operator">=</span> <span class="token function">composer</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MessageCommandNumberOption</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>option<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div></details><hr><h3 id="addbooleanoption" tabindex="-1"><a class="header-anchor" href="#addbooleanoption" aria-hidden="true">#</a> <strong>addBooleanOption</strong></h3><p>Adds an option that accepts <code>true</code> or <code>false</code>.</p><h4 id="parameters-8" tabindex="-1"><a class="header-anchor" href="#parameters-8" aria-hidden="true">#</a> Parameters:</h4><ul><li><strong>composer</strong>: <code>(option: MessageCommandBooleanOption) =&gt; MessageCommandBooleanOption</code></li></ul><h4 id="returns-7" tabindex="-1"><a class="header-anchor" href="#returns-7" aria-hidden="true">#</a> Returns:</h4>`,7),V=s("MessageCommandBuilder"),j=e(`<details class="custom-container details"><summary>TypeScript Source Code</summary><div class="language-typescript ext-ts"><pre class="language-typescript"><code><span class="token keyword">public</span> <span class="token function">addBooleanOption</span><span class="token punctuation">(</span><span class="token function-variable function">composer</span><span class="token operator">:</span> <span class="token punctuation">(</span>option<span class="token operator">:</span> MessageCommandBooleanOption<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> MessageCommandBooleanOption<span class="token punctuation">)</span><span class="token operator">:</span> MessageCommandBuilder <span class="token punctuation">{</span>
    <span class="token keyword">const</span> option <span class="token operator">=</span> <span class="token function">composer</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MessageCommandBooleanOption</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>option<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div></details><hr><h3 id="addmemberoption" tabindex="-1"><a class="header-anchor" href="#addmemberoption" aria-hidden="true">#</a> <strong>addMemberOption</strong></h3><h4 id="parameters-9" tabindex="-1"><a class="header-anchor" href="#parameters-9" aria-hidden="true">#</a> Parameters:</h4><ul><li><strong>composer</strong>: <code>(option: MessageCommandMemberOption) =&gt; MessageCommandMemberOption</code></li></ul><h4 id="returns-8" tabindex="-1"><a class="header-anchor" href="#returns-8" aria-hidden="true">#</a> Returns:</h4>`,6),F=s("MessageCommandBuilder"),H=e(`<details class="custom-container details"><summary>TypeScript Source Code</summary><div class="language-typescript ext-ts"><pre class="language-typescript"><code><span class="token keyword">public</span> <span class="token function">addMemberOption</span><span class="token punctuation">(</span><span class="token function-variable function">composer</span><span class="token operator">:</span> <span class="token punctuation">(</span>option<span class="token operator">:</span> MessageCommandMemberOption<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> MessageCommandMemberOption<span class="token punctuation">)</span><span class="token operator">:</span> MessageCommandBuilder <span class="token punctuation">{</span>
    <span class="token keyword">const</span> option <span class="token operator">=</span> <span class="token function">composer</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MessageCommandMemberOption</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>option<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div></details><hr><h3 id="addchanneloption" tabindex="-1"><a class="header-anchor" href="#addchanneloption" aria-hidden="true">#</a> <strong>addChannelOption</strong></h3><h4 id="parameters-10" tabindex="-1"><a class="header-anchor" href="#parameters-10" aria-hidden="true">#</a> Parameters:</h4><ul><li><strong>composer</strong>: <code>(option: MessageCommandChannelOption) =&gt; MessageCommandChannelOption</code></li></ul><h4 id="returns-9" tabindex="-1"><a class="header-anchor" href="#returns-9" aria-hidden="true">#</a> Returns:</h4>`,6),G=s("MessageCommandBuilder"),U=e(`<details class="custom-container details"><summary>TypeScript Source Code</summary><div class="language-typescript ext-ts"><pre class="language-typescript"><code><span class="token function">addChannelOption</span><span class="token punctuation">(</span><span class="token function-variable function">composer</span><span class="token operator">:</span> <span class="token punctuation">(</span>option<span class="token operator">:</span> MessageCommandChannelOption<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> MessageCommandChannelOption<span class="token punctuation">)</span><span class="token operator">:</span> MessageCommandBuilder <span class="token punctuation">{</span>
    <span class="token keyword">const</span> option <span class="token operator">=</span> <span class="token function">composer</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MessageCommandChannelOption</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>option<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div></details><hr><h3 id="addroleoption" tabindex="-1"><a class="header-anchor" href="#addroleoption" aria-hidden="true">#</a> <strong>addRoleOption</strong></h3><h4 id="parameters-11" tabindex="-1"><a class="header-anchor" href="#parameters-11" aria-hidden="true">#</a> Parameters:</h4><ul><li><strong>composer</strong>: <code>(option: MessageCommandRoleOption) =&gt; MessageCommandRoleOption</code></li></ul><h4 id="returns-10" tabindex="-1"><a class="header-anchor" href="#returns-10" aria-hidden="true">#</a> Returns:</h4>`,6),z=s("MessageCommandBuilder"),J=e(`<details class="custom-container details"><summary>TypeScript Source Code</summary><div class="language-typescript ext-ts"><pre class="language-typescript"><code><span class="token keyword">public</span> <span class="token function">addRoleOption</span><span class="token punctuation">(</span><span class="token function-variable function">composer</span><span class="token operator">:</span> <span class="token punctuation">(</span>option<span class="token operator">:</span> MessageCommandRoleOption<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> MessageCommandRoleOption<span class="token punctuation">)</span><span class="token operator">:</span> MessageCommandBuilder <span class="token punctuation">{</span>
    <span class="token keyword">const</span> option <span class="token operator">=</span> <span class="token function">composer</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MessageCommandRoleOption</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>option<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div></details><hr><h3 id="toregex" tabindex="-1"><a class="header-anchor" href="#toregex" aria-hidden="true">#</a> <strong>toRegex</strong></h3><h4 id="parameters-12" tabindex="-1"><a class="header-anchor" href="#parameters-12" aria-hidden="true">#</a> Parameters:</h4><ul><li><strong>prefix</strong>: <code>string</code></li></ul><p>The guild&#39;s message prefix.</p><h4 id="returns-11" tabindex="-1"><a class="header-anchor" href="#returns-11" aria-hidden="true">#</a> Returns:</h4><ul><li><code>RegExp</code></li></ul><details class="custom-container details"><summary>TypeScript Source Code</summary><div class="language-typescript ext-ts"><pre class="language-typescript"><code><span class="token keyword">public</span> <span class="token function">toRegex</span><span class="token punctuation">(</span>prefix<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> RegExp <span class="token punctuation">{</span>
    <span class="token keyword">const</span> aliases <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>aliases<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">|</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>aliases<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;|&quot;</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span> <span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>

    <span class="token keyword">let</span> regex <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>prefix<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>aliases<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">)</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> option <span class="token keyword">of</span> <span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        regex <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\\\\s+</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>option <span class="token keyword">instanceof</span> <span class="token class-name">MessageCommandOptionChoiceable</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>option<span class="token punctuation">.</span>choices<span class="token punctuation">.</span>length <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">switch</span> <span class="token punctuation">(</span>option<span class="token punctuation">.</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">case</span> MessageCommandOptionType<span class="token punctuation">.</span><span class="token constant">STRING</span><span class="token operator">:</span>
                        regex <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\\&quot;(.+)\\&quot;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">case</span> MessageCommandOptionType<span class="token punctuation">.</span><span class="token constant">NUMBER</span><span class="token operator">:</span>
                        regex <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">(\\\\d+)</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                regex <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\\&quot;(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>option<span class="token punctuation">.</span>choices<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>c <span class="token operator">=&gt;</span> c<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;|&quot;</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">)\\&quot;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">continue</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">switch</span> <span class="token punctuation">(</span>option<span class="token punctuation">.</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">case</span> MessageCommandOptionType<span class="token punctuation">.</span><span class="token constant">BOOLEAN</span><span class="token operator">:</span>
                regex <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">(true|false)</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> MessageCommandOptionType<span class="token punctuation">.</span><span class="token constant">MEMBER</span><span class="token operator">:</span>
                regex <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;@!?(\\\\d{17,19})&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> MessageCommandOptionType<span class="token punctuation">.</span><span class="token constant">CHANNEL</span><span class="token operator">:</span>
                regex <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;#(\\\\d{17,19})&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> MessageCommandOptionType<span class="token punctuation">.</span><span class="token constant">ROLE</span><span class="token operator">:</span>
                regex <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;@&amp;(\\\\d{17,19})&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">^</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>regex<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">$</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token string">&quot;gm&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div></details><hr><h3 id="validate" tabindex="-1"><a class="header-anchor" href="#validate" aria-hidden="true">#</a> <strong>validate</strong></h3><h4 id="parameters-13" tabindex="-1"><a class="header-anchor" href="#parameters-13" aria-hidden="true">#</a> Parameters:</h4><ul><li><strong>message</strong>: <code>Message</code></li></ul><p>The message that invoked the command.</p><h4 id="returns-12" tabindex="-1"><a class="header-anchor" href="#returns-12" aria-hidden="true">#</a> Returns:</h4><ul><li><code>Object</code></li></ul><details class="custom-container details"><summary>TypeScript Source Code</summary><div class="language-typescript ext-ts"><pre class="language-typescript"><code><span class="token keyword">public</span> <span class="token function">validate</span><span class="token punctuation">(</span>message<span class="token operator">:</span> Message<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">{</span> errors<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> options<span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">}</span> <span class="token punctuation">{</span>
		<span class="token keyword">const</span> errors<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
		<span class="token keyword">const</span> parsedOptions<span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
		<span class="token keyword">const</span> args <span class="token operator">=</span> message<span class="token punctuation">.</span>content<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\s+</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> perm <span class="token keyword">of</span> <span class="token keyword">this</span><span class="token punctuation">.</span>permissions<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>message<span class="token punctuation">.</span>member<span class="token operator">!</span><span class="token punctuation">.</span>permissions<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>perm<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				errors<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Missing permission: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>perm<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>

		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> id <span class="token keyword">of</span> <span class="token keyword">this</span><span class="token punctuation">.</span>roleIds<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>message<span class="token punctuation">.</span>guild<span class="token operator">!</span><span class="token punctuation">.</span>roles<span class="token punctuation">.</span>cache<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token keyword">continue</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>

			<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>message<span class="token punctuation">.</span>member<span class="token operator">!</span><span class="token punctuation">.</span>roles<span class="token punctuation">.</span>cache<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				errors<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Missing role: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">roleMention</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>

		<span class="token keyword">if</span> <span class="token punctuation">(</span>args<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token keyword">const</span> option <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
				<span class="token keyword">const</span> result <span class="token operator">=</span> option<span class="token punctuation">.</span><span class="token function">validate</span><span class="token punctuation">(</span>args<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

				<span class="token keyword">if</span> <span class="token punctuation">(</span>result <span class="token operator">===</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
					errors<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Invalid option: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>option<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
					<span class="token keyword">continue</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span>

				parsedOptions<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
			errors<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&quot;The number of arguments provided does not match the number of parsedOptions.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token keyword">return</span> <span class="token punctuation">{</span>
			options<span class="token operator">:</span> parsedOptions<span class="token punctuation">,</span>
			errors<span class="token punctuation">,</span>
		<span class="token punctuation">}</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
</code></pre></div></details>`,17);function K(Q,W){const c=o("Badge"),t=o("RouterLink");return i(),l(u,null,[d,a(c,{type:"tip",text:"class",vertical:"middle"}),m,h,g,n("ul",null,[n("li",null,[y,f,a(t,{to:"/references/MessageCommandBuilderData.html"},{default:p(()=>[w]),_:1})])]),b,n("ul",null,[n("li",null,[C,x,a(t,{to:"/references/MessageCommandOption.html"},{default:p(()=>[_]),_:1}),M])]),v,n("ul",null,[n("li",null,[a(t,{to:"/references/MessageCommandBuilder.html"},{default:p(()=>[O]),_:1})])]),B,n("ul",null,[n("li",null,[a(t,{to:"/references/MessageCommandBuilder.html"},{default:p(()=>[q]),_:1})])]),S,n("ul",null,[n("li",null,[a(t,{to:"/references/MessageCommandBuilder.html"},{default:p(()=>[T]),_:1})])]),R,n("ul",null,[n("li",null,[a(t,{to:"/references/MessageCommandBuilder.html"},{default:p(()=>[E]),_:1})])]),N,n("ul",null,[n("li",null,[a(t,{to:"/references/MessageCommandBuilder.html"},{default:p(()=>[P]),_:1})])]),A,n("ul",null,[n("li",null,[a(t,{to:"/references/MessageCommandBuilder.html"},{default:p(()=>[$]),_:1})])]),D,n("ul",null,[n("li",null,[a(t,{to:"/references/MessageCommandBuilder.html"},{default:p(()=>[I]),_:1})])]),L,n("ul",null,[n("li",null,[a(t,{to:"/references/MessageCommandBuilder.html"},{default:p(()=>[V]),_:1})])]),j,n("ul",null,[n("li",null,[a(t,{to:"/references/MessageCommandBuilder.html"},{default:p(()=>[F]),_:1})])]),H,n("ul",null,[n("li",null,[a(t,{to:"/references/MessageCommandBuilder.html"},{default:p(()=>[G]),_:1})])]),U,n("ul",null,[n("li",null,[a(t,{to:"/references/MessageCommandBuilder.html"},{default:p(()=>[z]),_:1})])]),J],64)}var Z=r(k,[["render",K]]);export{Z as default};
